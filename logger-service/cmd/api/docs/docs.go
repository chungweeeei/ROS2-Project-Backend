// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/log": {
            "get": {
                "description": "Retrieve all log entries from the logging service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Log"
                ],
                "summary": "Read all logs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ReadLogsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to retrieve log entries",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Write a log message to the logging service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Log"
                ],
                "summary": "Write a log message",
                "parameters": [
                    {
                        "description": "Log message details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.WriteLogRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.WriteLogResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to write log",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "data.LogEntry": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id:": {
                    "type": "integer"
                },
                "level": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Error message"
                }
            }
        },
        "main.ReadLogsResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean",
                    "example": false
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/data.LogEntry"
                    }
                }
            }
        },
        "main.WriteLogRequest": {
            "type": "object",
            "required": [
                "level",
                "message",
                "name"
            ],
            "properties": {
                "level": {
                    "type": "string",
                    "example": "info"
                },
                "message": {
                    "type": "string",
                    "example": "This is a test log message"
                },
                "name": {
                    "type": "string",
                    "example": "test-service"
                }
            }
        },
        "main.WriteLogResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Log written successfully"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
